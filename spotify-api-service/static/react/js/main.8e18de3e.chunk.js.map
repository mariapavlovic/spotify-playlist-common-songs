{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["scope_url","join","full_auth_url","App","useEffect","fetch","then","response","json","data","console","log","window","location","hash","params_obj","getParams","localStorage","setItem","JSON","stringify","access_token","sendParams","i","params","split_params","substring","split","length","key","value","createPlaylist","a","method","headers","parse","getItem","body","useStyles","makeStyles","theme","margin","spacing","BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","fontStyle","Button","useState","userID","setuserID","checkUserExists","accessToken","ok","className","variant","color","onClick","TextField","required","id","label","placeholder","defaultValue","onChange","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.8e18de3e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport { Button, TextField } from '@material-ui/core';\n// import TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport { purple } from '@material-ui/core/colors';\n\n// import MySpotifyApi from 'my-spotify-api'\n\nconst client_id = \"83a660b6c062427b977486567c05ed89\"; // Your client id\nconst client_secret = \"8adede35d6ea461c8116e9396062e41d\"; // Your secret\nconst redirect_uri = \"http://127.0.0.1:5000\"; // Your redirect uri\nconst scope = [\n  \"user-read-private\",\n  \"user-read-email\",\n  \"playlist-read-private\",\n  \"playlist-modify-public\",\n  \"playlist-modify-private\"\n];\nconst scope_url = scope.join(\"%20\")\nconst auth_url = \"https://accounts.spotify.com/authorize\";\n\nconst full_auth_url = `${auth_url}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scope_url}&response_type=token&state=123&show_dialog=true`;\n\n\nconst App = () => {\n\n  useEffect(() => {\n    let result = fetch(\"/playlist-created\").then(response =>\n      response.json().then(data=> {\n        console.log(data)\n      })\n    )\n\n    if(window.location.hash) {\n      const params_obj = getParams(window.location.hash);\n      localStorage.setItem(\"objectparam\", JSON.stringify(params_obj));\n      localStorage.setItem(\"accessToken\", JSON.stringify(params_obj.access_token))\n      sendParams();\n    }\n\n  })\n  \n  const getParams = (hash) => {\n    var params = {};\n    const split_params = hash.substring(1).split(\"&\");\n    var i;\n    for (i = 0; i < split_params.length; i++) {\n      const [key, value] = split_params[i].split(\"=\");\n      params[key] = value;\n    }\n    return params;\n  }\n\n  const authenticateUser = () => {\n    window.location = full_auth_url\n  }\n\n  const createPlaylist = async () => {\n    await fetch('/send-current-user-info', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(\n      response => {\n        console.log(response)\n    })\n    window.location = \"/create-playlist\"\n  }\n\n  const sendParams = async () => {\n    const params = JSON.parse(localStorage.getItem(\"objectparam\"));\n    await fetch('/send-access-token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params)\n    })\n    .then(\n      response => {\n        console.log(response)\n    })\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#9e4c41',\n      borderColor: '#9e4c41',\n      fontFamily: 'Futura',\n      fontStyle: 'italic',\n      '&:hover': {\n        backgroundColor: '#b56257',\n        borderColor: '#b56257',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#9e4c41',\n        borderColor: '#9e4c41',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n  // const [btnDisabled, setBtnDisabled] = useState(true)\n  // var createPlaylistBtnDisabled = true;\n  const [userID, setuserID] = useState('');\n  const checkUserExists = async () => {\n    const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\n    await fetch(`https://api.spotify.com/v1/users/${userID}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${accessToken}`\n      },\n    })\n    .then(\n      response => {\n        console.log(response)\n        if (response.ok) {\n          fetch(`/send-friends-user-info?user_id=${userID}`)\n          // this.setState({ createPlaylistBtnDisabled: false });\n        }\n        else {\n          // this.setState({ createPlaylistBtnDisabled: true });\n          // console.log(createPlaylistBtnDisabled);\n        }\n    })\n    // console.log(createPlaylistBtnDisabled);\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <p className=\"title\">\n          OUR SHARED TRACKS\n        </p>\n      </div>\n      <div className=\"section\">\n          <BootstrapButton variant=\"contained\" color=\"secondary\" onClick={authenticateUser}>Login With Spotify</BootstrapButton>\n      </div>\n      {/* <a href='/create-playlist'> */}\n        {/* <BootstrapButton variant=\"contained\" color=\"secondary\" onClick={createPlaylist}>Create Playlist With Common Songs!</BootstrapButton> */}\n      {/* </a> */}\n      <div className=\"section\">\n        <p className=\"paragraphs\">Enter your friend's Spotify user name:</p>\n        <TextField required variant=\"outlined\" id=\"outlined-required\" label=\"Required\" placeholder=\"friend's user name\" defaultValue=\"\" onChange={(event) => {setuserID(event.target.value)}} />\n        <BootstrapButton variant=\"contained\" color=\"primary\" className={useStyles.margin} onClick={checkUserExists}>Check User</BootstrapButton>\n      </div>\n      <div className=\"section\">\n        <BootstrapButton variant=\"contained\" color=\"primary\" className={useStyles.margin} onClick={createPlaylist}>Create Playlist With Our Shared Tracks!</BootstrapButton>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}